#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os
import_module('C')


def clean():
	"""Removes any files and directories generated when building."""
	rmfile('main')
	rmfile('main.o')
	rmfile('a.o')
	rmfile('b.o')
	rmfile('c.o')

def _configure():
	cc = c_get_default_compiler()
	cc.debug = True
	cc.optimize = True
	cc.warnings_all = True
	cc.warnings_as_errors = True
	c_save_compiler(cc)

def build():
	"""Builds the program. Will only build files that have changed since the last build."""
	require_not_root()
	_build()

def rebuild():
	"""Rebuilds the program. Will build all the files. Even if they have not changed since last build."""
	require_not_root()
	clean()
	_build()

def _build():
	_configure()

	# Get the names of all the c++ files
	code_files = ['a', 'b', 'c', 'main']

	# Build each c++ file into an object
	# All the events between parallel_start() and parallel_end() will be run in parallel
	parallel_start()
	for f in code_files:
		object_name = '{0}.o'.format(f)
		code_name = '{0}.c'.format(f)
		c_build_object(object_name, [code_name])
	parallel_end()

	# Link all the objects into the program
	object_files = [s + '.o' for s in code_files]
	c_build_program('main', object_files)

	# Run the program
	run_say('./main')




