#!/usr/bin/env python
# -*- coding: UTF-8 -*-


def clean():
	"""Removes any files and directories generated when building."""
	rmfile_f('a.out')
	rmfile_f('raise_example.o')
	rmfile_f('raise_example')
	rmfile_f('lib_regex.o')

def _configure():
	require_programs(['dmd'])

	os.environ['CC'] = 'gcc'
	os.environ['DC'] = 'dmd'
	os.environ['CFLAGS'] = '-g -Wall -Werror'
	os.environ['DFLAGS'] = '-g -w'

	require_shared_libraries(['libpcre'])
	require_static_libraries(['libphobos2'])

def test():
	"""Builds the program, and runs it."""
	clean()
	_configure()

	c_build_object('lib_regex.o', ['lib_regex.c'])

	d_build_program('raise_example', ['main.d', 'lib_regex.o', 'lib_regex.d'], ['-L-lpcre'])

	run_say('./raise_example')

def remove():
	"""Uninstalls the program."""
	require_root()
	clean()

	rmfile_f('/usr/bin/raise_example')
	rmfile_f('/usr/lib/libexample.so')

def install():
	"""Installs the program."""
	require_root()
	clean()
	remove()

	_configure()
	c_build_object('libexample.o', ['libexample.c'])
	c_build_shared_library('libexample.so', ['libexample.o'])
	c_build_program('raise_example', ['main.c'], ['libexample.so'])

	cpfile('raise_example', '/usr/bin/raise_example')
	cpfile('libexample.so', '/usr/lib/libexample.so')
