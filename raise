#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os, sys
import stat
if sys.version_info < (3, 0):
	import urllib2
	globals()['urlopen'] = urllib2.urlopen
else:
	import urllib.request
	globals()['urlopen'] = urllib.request.urlopen

def friendly_size(data_length):
	retval = ''
	size_map = [
		{'B'  : 1},
		{'KB' : 1024.0},
		{'MB' : 1024000.0},
		{'GB' : 1024000000.0}
	]
	for i in size_map:
		for name, size in i.items():
			if data_length >= size:
				retval = '{0} {1}'.format(round(data_length / size, 2), name)
				break

	return retval

def download_file(url, cb):
	chunk_size = 1024
	response = urlopen(url)
	content_length = int(response.headers['Content-Length'])
	data = b''
	data_length = 0

	while True:
		chunk = response.read(chunk_size)
		if not chunk:
			break

		data += chunk
		data_length += len(chunk)
		percent = round((float(data_length) / content_length)*100, 2)

		cb(chunk, data_length, chunk_size, content_length, percent)

def update():
	print("Downloading newest Raise version ...")
	try:
		url = 'http://bazaar.launchpad.net/~workhorsy/raise/main/download/head:/raise-20120417054845-dmqxla979coc2eqq-1/raise'
		f = open('.raise_actual', 'wb')

		def cb(chunk, data_length, chunk_size, content_length, percent):
			# Write the next chunk to the file
			f.write(chunk)

			# Write the download progress
			sys.stdout.write("Downloaded {0} of {1} ({2}%)\r".format(friendly_size(data_length), friendly_size(content_length), percent))

			# Write a newline if the download is complete
			if data_length >= content_length:
				sys.stdout.write('\n')

			sys.stdout.flush()

		# Download the file and call the cb after each chunk
		download_file(url, cb)

		# Make the file executable
		os.chmod('.raise_actual', 0775 | stat.S_IXOTH)
	except Exception as e:
		print(str(e))

if __name__ == '__main__':
	# Clear the terminal if ran as clear; ./raise
	os.system('clear')

	args = str(str.join(' ', sys.argv[1:]))
	if args == 'update':
		update()
		exit()

	if not os.path.isfile('.raise_actual'):
		update()

	os.system('./.raise_actual ' + args)


