#!/usr/bin/env python
# -*- coding: UTF-8 -*-

import os
from lib_raise_c import *
from lib_raise_cxx import *
from lib_raise_ar import *
from lib_raise_linker import *


def clean():
	"""Removes any files and directories generated when building."""
	rm_binaries('lib_math')
	rm_binaries('main')

def _configure():
	cxx = cxx_get_default_compiler()
	cxx.debug = True
	cxx.optimize = True
	cxx.warnings_all = True
	cxx.warnings_as_errors = True
	cxx_save_compiler(cxx)

	linker = linker_get_default_linker()
	linker_save_linker(linker)

	os.environ['LD_LIBRARY_PATH'] = os.getcwd()

def build_object():
	clean()
	_configure()

	cxx_build_object('lib_math.o', ['lib_math.cc'])
	cxx_build_object('main.o', ['main.cc'])

	cxx_build_program('main.exe', ['lib_math.o', 'main.o'])

	cxx_run_say('./main.exe')

def build_program():
	clean()
	_configure()

	cxx_build_program('main.exe', ['lib_math.cc', 'main.cc'])

	cxx_run_say('./main.exe')

def build_shared_library():
	clean()
	_configure()

	# Build the library
	cxx_build_object('lib_math.o', ['lib_math.cc'])
	c_build_shared_library('lib_math.so', ['lib_math.o'])

	cxx_build_program('main.exe', ['main.cc', 'lib_math.so'])

	cxx_run_say('./main.exe')

def build_static_library():
	clean()
	_configure()

	# Build the library
	cxx_build_object('lib_math.o', ['lib_math.cc'])
	ar_build_static_library('lib_math.a', ['lib_math.o'])

	cxx_build_program('main.exe', ['main.cc', 'lib_math.a'])

	cxx_run_say('./main.exe')

